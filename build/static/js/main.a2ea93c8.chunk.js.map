{"version":3,"sources":["input.js","Button.js","App.js","reportWebVitals.js","userGithub.js","index.js"],"names":["makeStyles","theme","root","margin","spacing","width","paper","marginTop","display","flexDirection","alignItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserGithub","props","state","username","githubtUrl","avatarUrl","subscriptions_url","id","organizations_url","$","get","this","source","result","console","log","data","setState","name","html_url","avatar_url","src","href","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAIkBA,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,a,aCJKL,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,MAG1BE,MAAO,CACLC,UAAWN,EAAMG,QAAQ,GACzBI,QAAS,OACTC,cAAe,SACfC,WAAY,cCADC,ICFAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iDCuCCQ,E,kDAzCX,WAAYC,GAAQ,IAAD,8BACnB,cAAMA,IACDC,MAAQ,CACTC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,kBAAmB,GACnBC,GAAG,GACHC,kBAAkB,IARH,E,qDAWnB,WAAoB,IAAD,OACfC,IAAEC,IAAIC,KAAKV,MAAMW,QAAQ,SAACC,GACtBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACA,EAAKC,SAAS,CACdd,SAAUa,EAAKE,KACfd,WAAYY,EAAKG,SACjBd,UAAWW,EAAKI,WAChBd,kBAAmBU,EAAKV,kBACxBC,GAAIS,EAAKT,GACTC,kBAAmBQ,EAAKR,yB,oBAKpC,WACI,OACI,gCACA,6BAAKG,KAAKT,MAAMC,WAChB,oCAAOQ,KAAKT,MAAMK,MAClB,qBAAKc,IAAKV,KAAKT,MAAMG,YAAY,sBACjC,mBAAGiB,KAAMX,KAAKT,MAAME,WAApB,yBAA+C,sBAC/C,mBAAGkB,KAAMX,KAAKT,MAAMM,kBAApB,oCAAiE,sBACjE,mBAAGc,KAAMX,KAAKT,MAAMI,kBAApB,2C,GApCaiB,IAAMC,WCG/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAYf,OAAO,iDAErBgB,SAASC,eAAe,SAM1BtC,M","file":"static/js/main.a2ea93c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicTextFields() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField id=\"standard-basic\" label=\"Email\" />\r\n      <p/>\r\n      <TextField id=\"standard-basic\" label=\"Password\" />\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(10),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport default function ContainedButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} className={classes.paper}>\r\n      <Button variant=\"contained\" color=\"secondary\" >\r\n        登入\r\n      </Button>\r\n    </div>\r\n  );\r\n}","import MultiButton from'./cgu_multiButton.js'\nimport HelloCGU from './cgu_hello.js'\nimport BasicTextFields from './input.js'\nimport ContainedButtons from './Button.js'\n\nfunction App(){\n  return (<div className = \"App\">\n  <center><div>{ HelloCGU()}</div></center>\n  <center><div>{ BasicTextFields()}</div></center>\n  <div>{ContainedButtons()}</div>\n  </div>  \n\n  );\n}\nexport default App;\n//<div>{ MultiButton(10) }</div>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport $ from 'jquery';\r\n\r\nclass UserGithub extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        username: '',   \r\n        githubtUrl: '',\r\n        avatarUrl: '',\r\n        subscriptions_url: '',\r\n        id:'',\r\n        organizations_url:'',\r\n    }\r\n    }\r\n    componentDidMount(){\r\n        $.get(this.props.source, (result) => {\r\n            console.log(result);\r\n            const data = result;\r\n            if (data) {\r\n                this.setState({\r\n                username: data.name,\r\n                githubtUrl: data.html_url,\r\n                avatarUrl: data.avatar_url,\r\n                subscriptions_url: data.subscriptions_url,\r\n                id: data.id,\r\n                organizations_url: data.organizations_url});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <h3>{this.state.username}</h3>\r\n            <p>id={this.state.id}</p>\r\n            <img src={this.state.avatarUrl}/><p/>\r\n            <a href={this.state.githubtUrl}>Github Link</a><p/>\r\n            <a href={this.state.organizations_url}>organizations_url Link</a><p/>\r\n            <a href={this.state.subscriptions_url}>subscriptions_url Link</a>\r\n            </div>\r\n        );     \r\n    } \r\n}\r\n\r\nexport default UserGithub;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport UserGithub from './userGithub.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserGithub source=\"https://api.github.com/users/Weng-B0829022\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}